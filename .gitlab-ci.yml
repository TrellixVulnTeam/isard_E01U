# https://docs.gitlab.com/ee/ci/yaml/index.html#switch-between-branch-pipelines-and-merge-request-pipelines
workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH && $CI_PIPELINE_SOURCE == "push" && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - when: always

stages:
 - lint
 - version
 - docker-compose
 - docker-images
 - docker-registry
 - changelog

commit-lint:
  image: alpine
  stage: lint
  rules:
    - if: '$CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
  before_script:
    - apk add --no-cache nodejs npm git
    - npm i --save @commitlint/config-conventional
  script:
    - echo "${CI_COMMIT_TITLE}\n\n${CI_COMMIT_DESCRIPTION}" | npx commitlint -x "@commitlint/config-conventional"

version:
  image: alpine
  stage: version
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  before_script:
    - apk add --no-cache nodejs npm git
    - npm install -g semantic-release @semantic-release/exec @semantic-release/gitlab conventional-changelog-conventionalcommits
  script:
    - |
      echo "{ 'branches': ['$CI_DEFAULT_BRANCH', '$CI_COMMIT_REF_NAME'], 'plugins': [['@semantic-release/commit-analyzer', { 'preset': 'conventionalcommits' }], ['@semantic-release/exec', { 'verifyReleaseCmd': 'echo \${nextRelease.version} > .VERSION' }]] }" > .releaserc && rm .releaserc.yml
    - semantic-release --no-ci
  artifacts:
    paths:
      - .VERSION

docker-compose:
  image: docker:latest
  stage: docker-compose
  services:
    - docker:dind
  script:
    - apk add bash git docker-compose
    # Use docker compose < 1.27 to avoid depends_on issue
    # https://github.com/isard-vdi/isard/issues/390
    - apk add py3-pip
    - pip install docker-compose~=1.26.0
    - cp isardvdi.cfg.example isardvdi.cfg
    - echo "DOCKER_IMAGE_PREFIX=${CI_REGISTRY_IMAGE}/" >> isardvdi.cfg
    - echo "DOCKER_IMAGE_TAG=$CI_COMMIT_REF_SLUG" >> isardvdi.cfg
    - cp isardvdi.cfg isardvdi.build.cfg
    - echo "USAGE=build" >> isardvdi.build.cfg
    - cp isardvdi.build.cfg isardvdi.video-standalone.build.cfg
    - echo "FLAVOUR=video-standalone" >> isardvdi.video-standalone.build.cfg
    - cp isardvdi.build.cfg isardvdi.toolbox.build.cfg
    - echo "FLAVOUR=toolbox" >> isardvdi.toolbox.build.cfg
    - ./build.sh
  artifacts:
    paths:
      - docker-compose*.yml

docker-image:
  image: docker:latest
  stage: docker-images
  services:
    - docker:dind
  parallel:
    matrix:
      - DOCKER_COMPOSE: build
        IMAGE:
          - api
          - authentication
          - engine
          - grafana
          - guac
          - hypervisor
          - portal
          - squid
          - static
          - stats
          - vpn
          - webapp
          - websockify
      - DOCKER_COMPOSE: video-standalone.build
        IMAGE: video
      - DOCKER_COMPOSE: toolbox.build
        IMAGE: toolbox
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - apk add git docker-compose
    - git submodule update --init --recursive --remote
    - docker-compose -f docker-compose.$DOCKER_COMPOSE.yml build isard-$IMAGE
    - docker tag $CI_REGISTRY_IMAGE/$IMAGE:$CI_COMMIT_REF_SLUG $CI_REGISTRY_IMAGE/$IMAGE:git-$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE/$IMAGE:git-$CI_COMMIT_SHORT_SHA

docker-tag:
  stage: docker-registry
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  parallel:
    matrix:
      - IMAGE:
          - api
          - authentication
          - engine
          - grafana
          - guac
          - hypervisor
          - portal
          - squid
          - static
          - stats
          - vpn
          - webapp
          - websockify
          - video
          - toolbox
  script:
    - crane auth login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - crane tag $CI_REGISTRY_IMAGE/$IMAGE:git-$CI_COMMIT_SHORT_SHA $CI_COMMIT_REF_SLUG

changelog:
  image: alpine
  stage: changelog
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  before_script:
    - apk add --no-cache nodejs npm git
    - npm install -g semantic-release @semantic-release/gitlab conventional-changelog-conventionalcommits
  script:
    - semantic-release

