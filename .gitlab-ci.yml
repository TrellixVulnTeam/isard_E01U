stages:
 - build
 - changelog
 - force-changelog-retry

docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - apk add bash git docker-compose
    # Use docker compose < 1.27 to avoid depends_on issue
    # https://github.com/isard-vdi/isard/issues/390
    - apk add py3-pip
    - pip install docker-compose~=1.26.0
    - cp isardvdi.cfg.example isardvdi.cfg
    - echo "DOCKER_IMAGE_PREFIX=${CI_REGISTRY_IMAGE}/" >> isardvdi.cfg
    - echo "DOCKER_IMAGE_TAG=$CI_COMMIT_REF_SLUG" >> isardvdi.cfg
    - ./build.sh
    - docker-compose -f docker-compose.yml pull
    - docker-compose -f docker-compose.build.yml build
    - docker-compose -f docker-compose.video-standalone.yml pull
    - docker-compose -f docker-compose.video-standalone.build.yml build isard-video
    - docker-compose -f docker-compose.toolbox.yml pull
    - docker-compose -f docker-compose.toolbox.build.yml build isard-toolbox
    - docker-compose -f docker-compose.devel.yml pull
    - docker-compose -f docker-compose.devel.yml build isard-frontend-dev
    - docker images --format="{{.Repository}}:{{.Tag}}" | grep "^$CI_REGISTRY_IMAGE/" | xargs -n1 docker push
  artifacts:
    paths:
      - docker-compose*.yml

.changelog:
  image: registry.gitlab.com/gitlab-org/release-cli
  stage: changelog
  before_script:
    - apk add --no-cache nodejs npm git
    - cd releaser && npm i --save && cd -

changelog:
  extends: .changelog
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - ./releaser/index.js CHANGELOG.md

changelog-release:
  extends: .changelog
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  script:
    - url_host=`git remote get-url origin | sed -e "s/https:\/\/gitlab-ci-token:.*@//g"`
    - git remote set-url origin "https://${GITLAB_LOGIN}:${GITLAB_TOKEN}@${url_host}"
    - ./releaser/index.js CHANGELOG.md --release

force-changelog-retry:
  image: alpine
  stage: force-changelog-retry
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: always
      allow_failure: true
    - when: never
  before_script:
    - apk add --no-cache jq curl
  script:
    - export gitlab_base_url="https://gitlab.com/api/v4/projects"
    - |
      export opened_merge_requests=`curl -H "Authorization: Bearer ${GITLAB_TOKEN}" "${gitlab_base_url}/${PROJECT_ID}/merge_requests?state=opened"`
    - |
      for iid in $(echo "${opened_merge_requests}" | jq '.[] | .iid'); do
        latest_pipeline=`curl -H "Authorization: Bearer ${GITLAB_TOKEN}" "${gitlab_base_url}/${PROJECT_ID}/merge_requests/${iid}/pipelines" |  jq '.[0] | .id'`
        latest_changelog_job=`curl -H "Authorization: Bearer ${GITLAB_TOKEN}" "${gitlab_base_url}/${PROJECT_ID}/pipelines/${latest_pipeline}" |  jq '.[] | select(.name == "changelog") | .id' `
        curl -x POST -H "Authorization: Bearer ${GITLAB_TOKEN}" "$gitlab_base_url/${PROJECT_ID}/jobs/${latest_changelog_job}/retry"
      done
