# Isard main config v0.1

## Hostname can be whatever you want to identify this host in
## the system paths. If you have a domain set it here
HOSTNAME=localhost

## Frontend Administration Button
## With this variable you can control if there is a button in the simplified
## interface (frontend) to go to administration login for users of role User.
## True: show button
## False (or variable not defined): don't show the button
FRONTEND_SHOW_ADMIN_BTN=True

## Generate your own!:
## openssl rand -base64 32
WEBAPP_SESSION_SECRET=xq0Z3MP5ujxrQxtMGxgPiijH9xpuxkyP04R6At/V+g4=

## Generate your own!:
## openssl rand -base64 32
API_ISARDVDI_SECRET=kpWpdF0NtI2XCEfzMp36hdSV9S42E7axS8D5TvP9c0A=

## Initial WEB admin user password
WEBAPP_ADMIN_PWD=IsardVDI

# WEB CERTIFICATES
## You can use your own certificates if you concatenate into 
## /opt/isard/certs/default/chain.pem
## You can let isard generate autosigned certs (not recommended as
## html5 viewers will not work.
## Or you can let isard generate letsencrypt certs for your domain.
## For this option to work be sure the domain points to this IP.
## To avoid using letsencrypt set it to defaults enpty.
## Note: if this only an hypervisor you should only set VIDEO_LETSENCRYPT
##       variables down this file.
#WEBAPP_LETSENCRYPT_DNS=your.domain.com
#WEBAPP_LETSENCRYPT_EMAIL=info@domain.com
WEBAPP_LETSENCRYPT_DNS=
WEBAPP_LETSENCRYPT_EMAIL=

# GRAFANA
## Set grafana URl to your domain or IP
#GRAFANA_URL=your.domain.com
GRAFANA_URL=localhost

# TELEGRAM BOT ALERTS
## TOKEN: https://core.telegram.org/bots#6-botfather
TELEGRAM_BOT_TOKEN=
## CHAT_ID: Add your bot to a group and get the chat_id from 
## https://api.telegram.org/bot<YourBOTToken>/getUpdates response
TELEGRAM_BOT_CHAT_ID=

##################################################################
##################################################################
## DO NOT EDIT FROM HERE UNLESS YOU KNOW WHAT YOU ARE DOING !!! ##
##################################################################
##################################################################

###################### DOCKER IMAGES

# Assign a docker /24 network. The host part will be set by system
DOCKER_NET=172.18.255

# Image prefix that could include registry and repository
DOCKER_IMAGE_PREFIX=registry.gitlab.com/isard/isardvdi/
# Image tag that could be tags or branches from the git repository
DOCKER_IMAGE_TAG=develop

# Logging level
LOG_LEVEL=INFO

###################### Wireguard

## All the sub networks needed for infrastructure wireguard will
## fall within this sub networks
WG_MAIN_NET=10.0.0.0/14

## Users at home will get a unique /32 IP from this range.
## Set a network that will allow as many clients as you will have.
WG_USERS_NET=10.0.0.0/16

## UDP port for users at home to connect wireguard to this server.
WG_USERS_PORT=443

## Only in infrastructure this will be used by remote hypers to 
## send wireguard guests network to the main Isard. 
WG_HYPERS_NET=10.1.0.0/24

## UDP port for remote hypervisors to connect to this server.
WG_HYPERS_PORT=4443

## 0: isard-hypervisor.
## N: next hypers. Be aware not to overlap them!
## You need to set also this number when adding the hypervisor in
## web admin. It should match as the networks are calculated based
## on this hyper number.
HYPERVISOR_NUMBER=0

## This is the main range to be used by wireguard interface in
## guests in your system. Will be subdivided in smaller ranges
## for each hypervisor.
WG_GUESTS_NETS=10.2.0.0/16

## 23: 512 GUESTS -2
## 24: 256 GUESTS -2
## Each hypervisor will get one subnet from WG_GUESTS_NETS
## Last network will be subdivided /29 to connect wireguard hyper
## clients (isard-vpnc) to the wireguard server (isard-vpn)
WG_GUESTS_DHCP_MASK=23
## This sets a reserved dhcp range if you want.
WG_GUESTS_RESERVED_HOSTS=20

## This is the internal interface in wireguard and isard-hypervisor
## containers. In docker it is the isard-vpn network.
WG_INTERFACE=eth1

##############################################################################
##############################################################################
## ANOTHER EXAMPLE DEFINING Wireguard NETWORKS
# Lets get a range with enouth IPs to subdivide.
# We need at least ranges for users, remote hypers and dhcp nets for
# desktops in those remote hypers.
# FULL WG RANGE: 128-135
# WG_MAIN_NET=          192.168.128.0/21 

# Now lets subdivide this full range in smaller ones
# FIRST NETWORK: Users network
# Range 128.1-129.254: 510 Maximum users that can get vpn config
# WG_USERS_NET=             192.168.128.0/23

# SECOND NETWORK: Hypervisors network
# Range 130.1-131.254: 510 Maximum hypervisors connected from isard-vpnc
# We will lose almost all this network
# WG_HYPERS_NET=            192.168.130.0/23

# THIRD NETWORK: Guests in hypervisors. Will be again subdivided with DHCP_MASK
# Range 132.0-135.254
# WG_GUESTS_NETS=           192.168.132.0/22

# This third network should be subdivided for guests in hypervisors,
# so balance between number of hypervisors and guests that can run there.
# For example:
# WG_GUESTS_DHCP_MASK=24        /24: 4 NETS/HYPERS WITH 253 DESKTOPS EACH (If RESERVED_HOSTS=0)
#                               /25: 8 NETS/HYPERS WITH 125 DESKTOPS EACH (If RESERVED_HOSTS=0)
# WG_GUESTS_RESERVED_HOSTS=20  Yo will lose those desktops from each WG_GUESTS_DHCP_MASK

# And remember to set interface and UDP ports for this vpn connections
# WG_INTERFACE=eth1     # this is the internal network name between isard-vpn
#                           and isard-hypervisor containers
# WG_USERS_PORT=443     # Users connect to main isard-vpn with this port
# WG_HYPERS_PORT=4443   # Remote hypers connect isard-vpnc to main with this port
##############################################################################
##############################################################################

###################### HYPERVISOR

## Uncomment to map host interface name inside hypervisor container.
## If static vlans are commented then hypervisor will initiate an 
## auto-discovery process. The discovery process will last for 260
## seconds and this will delay the hypervisor from being available.
## So it is recommended to set also the static vlans.
## Note: It will create VlanXXX automatically on webapp. You need to
##       assign who is allowed to use this VlanXXX interfaces.
#HYPERVISOR_HOST_TRUNK_INTERFACE=

## This environment variable depends on previous one. When setting
## vlans number comma separated it will disable auto-discovery and
## fix this as forced vlans inside hypervisor.
#HYPERVISOR_STATIC_VLANS=

## NOTE: The interface name should not be changed from defaults.
##       Newer kernels use cgroups2 that doens't work. To get the
##       old cgroups add to /etc/default/grub:
##        GRUB_CMDLINE_LINUX="systemd.unified_cgroup_hierarchy=0"
##       and update-grub, and reboot.

###################### Hypervisor video proxy

## Only set this to different LETSENCRYPT domain if you are using
## two different dns for web & hypervisor on the same host and you
## want to use letsencrypt!
## If hypervisor domain is different from web domain then you can use
## your own certificates concatenated in /opt/isard/certs/default/chain.pem
## or set here your hypervisor domain name to let isard generate
## letsencrypt certificate
## Do not set if you don't know what you are doing.
## Default empty
## Set only this environment variables if you are setting an standalone
## hypervisor.
# VIDEO_LETSENCRYPT_DNS=your.video.domain.com
# VIDEO_LETSENCRYPT_EMAIL=info@domain.com
VIDEO_LETSENCRYPT_DNS=
VIDEO_LETSENCRYPT_EMAIL=

###################### ENGINE config

## Main database reacheable host name
## Defaults: isard-db
RETHINKDB_HOST=isard-db
RETHINKDB_PORT=28015
RETHINKDB_DB=isard

###################### WEBAPP config

## Main database reacheable host name
## Defaults: isard-db
## Infrastructure: set it in host /etc/hosts: <IP> isard-db
WEBAPP_HOST=isard-webapp
WEBAPP_RETHINKDB_HOST=isard-db
WEBAPP_RETHINKDB_PORT=28015
WEBAPP_RETHINKDB_DB=isard

###################### AUTHENTICATION config

AUTHENTICATION_AUTHENTICATION_HOST=localhost
AUTHENTICATION_DB_HOST=isard-db

## Local
# AUTHENTICATION_AUTHENTICATION_LOCAL=false

## Google
# Create your Google OAUTH credentials at https://console.developers.google.com/apis/credentials
# Authorized redirect URIs: https://domain.tld/authentication/callback
# Change AUTHENTICATION_AUTHENTICATION_HOST to domain.tld
# AUTHENTICATION_AUTHENTICATION_GOOGLE_CLIENT_ID=id
# AUTHENTICATION_AUTHENTICATION_GOOGLE_CLIENT_SECRET=secret

###################### BACKEND config

BACKEND_HOST=localhost

# VIDEO config
###########################################################
## Reacheable ip/dns from isard-debug to host holding video haproxy.
## Only to gather statistics 
VIDEO_HAPROXY_HOST=isard-video
VIDEO_PORT=443
VIDEO_STATS_PORT=8889
## Squid video proxy acls
### Comma separated fields of hypervisor hostnames allowed to be proxied.
### Must be the same as the Viewer PROXY name in web ui hypervisor config.
VIDEO_HYPERVISOR_HOSTNAMES=isard-hypervisor
VIDEO_HYPERVISOR_PORTS=5900-6899

# GRAFANA Config
###########################################################
GRAFANA_HOST=isard-grafana
## Path as seen from isard-portal haproxy
GRAFANA_PATH=/monitor/
## Port as defined in isard-portal haproxy
GRAFANA_PORT=443

# STATS host
###########################################################
# This will identify all stats from this host in grafana
STATS_HOSTNAME=localhost
# This must be set to your grafana server hostname
STATS_SERVER=isard-grafana

## Stats database
STATS_RETHINKDB_HOST=isard-db
STATS_RETHINKDB_PORT=28015
STATS_RETHINKDB_DB=isard
