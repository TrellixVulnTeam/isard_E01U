// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type Desktop struct {
	ID          string    `json:"id"`
	Name        string    `json:"name"`
	Description *string   `json:"description"`
	Hardware    *Hardware `json:"hardware"`
}

type DesktopCreateInput struct {
	Name        string                      `json:"name"`
	Description *string                     `json:"description"`
	Hardware    *DesktopCreateInputHardware `json:"hardware"`
}

type DesktopCreateInputHardware struct {
	BaseID string `json:"baseId"`
	Vcpus  int    `json:"vcpus"`
	Memory int    `json:"memory"`
}

type DesktopCreatePayload struct {
	RecordID *string  `json:"recordId"`
	Record   *Desktop `json:"record"`
}

type DesktopDeletePayload struct {
	RecordID *string  `json:"recordId"`
	Record   *Desktop `json:"record"`
}

type DesktopDerivateInput struct {
	TemplateID  string  `json:"templateId"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

type DesktopDerivatePayload struct {
	RecordID *string  `json:"recordId"`
	Record   *Desktop `json:"record"`
}

type DesktopStartPayload struct {
	RecordID *string  `json:"recordId"`
	Record   *Desktop `json:"record"`
	Viewer   *Viewer  `json:"viewer"`
}

type DesktopStopPayload struct {
	RecordID *string  `json:"recordId"`
	Record   *Desktop `json:"record"`
}

type DesktopTemplateInput struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
}

type DesktopTemplatePayload struct {
	RecordID *string   `json:"recordId"`
	Record   *Template `json:"record"`
}

type Hardware struct {
	Base   *HardwareBase `json:"base"`
	Vcpus  int           `json:"vcpus"`
	Memory int           `json:"memory"`
}

type HardwareBase struct {
	ID          string  `json:"id"`
	Name        string  `json:"name"`
	Description *string `json:"description"`
	Os          string  `json:"os"`
	OsVariant   *string `json:"osVariant"`
	XML         string  `json:"xml"`
}

type HardwareBaseCreateInput struct {
	Name        string  `json:"name"`
	Description *string `json:"description"`
	Os          string  `json:"os"`
	OsVariant   *string `json:"osVariant"`
	XML         string  `json:"xml"`
}

type HardwareBaseCreatePayload struct {
	RecordID *string       `json:"recordId"`
	Record   *HardwareBase `json:"record"`
}

type LoginInput struct {
	Provider string  `json:"provider"`
	EntityID string  `json:"entityId"`
	Usr      *string `json:"usr"`
	Pwd      *string `json:"pwd"`
}

type LoginPayload struct {
	Token   string `json:"token"`
	ID      string `json:"id"`
	Name    string `json:"name"`
	Surname string `json:"surname"`
}

type Template struct {
	ID          string    `json:"id"`
	Name        string    `json:"name"`
	Description string    `json:"description"`
	Hardware    *Hardware `json:"hardware"`
}

type TemplateDeletePayload struct {
	RecordID *string   `json:"recordId"`
	Record   *Template `json:"record"`
}

type Viewer struct {
	Spice   *ViewerSpice   `json:"spice"`
	VncHTML *ViewerVncHTML `json:"vncHtml"`
}

type ViewerSpice struct {
	File string `json:"file"`
}

type ViewerVncHTML struct {
	URL string `json:"url"`
}
