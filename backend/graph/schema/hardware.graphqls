type Hardware {
    base: HardwareBase!
    vcpus: Int!
    memory: Int!
    disks: [Disk!]!
}

type HardwareBase {
    id: ID!
    name: String!
    description: String
    os: String!
    osVariant: String
    xml: String!
}

type Disk {
    id: ID!
    type: DiskType!
    name: String!
    description: String
}

enum DiskType {
    UNKNOWN
    QCOW2
    RAW
    ISO
    FLOPPY
    USB
}

# type HardwareBaseQueries {
#     list: [HardwareBase!]!
#     get(id: ID!): HardwareBase
# }

# type HardwareBaseMutations {
#     create(input: HardwareBaseCreateInput!): HardwareBaseCreatePayload
# }

input HardwareBaseCreateInput {
    name: String!
    description: String
    os: String!
    osVariant: String
    xml: String!
}

type HardwareBaseCreatePayload {
    recordId: ID
    record: HardwareBase
}