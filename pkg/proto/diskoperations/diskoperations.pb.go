// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.14.0
// source: proto/diskoperations/diskoperations.proto

package diskoperations

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiskType int32

const (
	DiskType_UNKNOWN DiskType = 0
	DiskType_QCOW    DiskType = 1
	DiskType_RAW     DiskType = 2
	DiskType_ISO     DiskType = 3
	DiskType_FLOPPY  DiskType = 4
	DiskType_USB     DiskType = 5
)

// Enum value maps for DiskType.
var (
	DiskType_name = map[int32]string{
		0: "UNKNOWN",
		1: "QCOW",
		2: "RAW",
		3: "ISO",
		4: "FLOPPY",
		5: "USB",
	}
	DiskType_value = map[string]int32{
		"UNKNOWN": 0,
		"QCOW":    1,
		"RAW":     2,
		"ISO":     3,
		"FLOPPY":  4,
		"USB":     5,
	}
)

func (x DiskType) Enum() *DiskType {
	p := new(DiskType)
	*p = x
	return p
}

func (x DiskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiskType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_diskoperations_diskoperations_proto_enumTypes[0].Descriptor()
}

func (DiskType) Type() protoreflect.EnumType {
	return &file_proto_diskoperations_diskoperations_proto_enumTypes[0]
}

func (x DiskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiskType.Descriptor instead.
func (DiskType) EnumDescriptor() ([]byte, []int) {
	return file_proto_diskoperations_diskoperations_proto_rawDescGZIP(), []int{0}
}

type DiskCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        DiskType `protobuf:"varint,1,opt,name=type,proto3,enum=com.gitlab.isard.isardvdi.diskoperations.DiskType" json:"type,omitempty"`
	Size        int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	EntityId    int64    `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	UserId      int64    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name        string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DiskCreateRequest) Reset() {
	*x = DiskCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_diskoperations_diskoperations_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskCreateRequest) ProtoMessage() {}

func (x *DiskCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diskoperations_diskoperations_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskCreateRequest.ProtoReflect.Descriptor instead.
func (*DiskCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_diskoperations_diskoperations_proto_rawDescGZIP(), []int{0}
}

func (x *DiskCreateRequest) GetType() DiskType {
	if x != nil {
		return x.Type
	}
	return DiskType_UNKNOWN
}

func (x *DiskCreateRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DiskCreateRequest) GetEntityId() int64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *DiskCreateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DiskCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiskCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DiskCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DiskCreateResponse) Reset() {
	*x = DiskCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_diskoperations_diskoperations_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiskCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskCreateResponse) ProtoMessage() {}

func (x *DiskCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_diskoperations_diskoperations_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskCreateResponse.ProtoReflect.Descriptor instead.
func (*DiskCreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_diskoperations_diskoperations_proto_rawDescGZIP(), []int{1}
}

func (x *DiskCreateResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_proto_diskoperations_diskoperations_proto protoreflect.FileDescriptor

var file_proto_diskoperations_diskoperations_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x73, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x73,
	0x61, 0x72, 0x64, 0x76, 0x64, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x6b, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x69, 0x73, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x73, 0x61,
	0x72, 0x64, 0x76, 0x64, 0x69, 0x2e, 0x64, 0x69, 0x73, 0x6b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x2a, 0x48, 0x0a, 0x08, 0x44, 0x69, 0x73,
	0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x51, 0x43, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x52, 0x41, 0x57, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x53, 0x4f, 0x10, 0x03, 0x12, 0x0a,
	0x0a, 0x06, 0x46, 0x4c, 0x4f, 0x50, 0x50, 0x59, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x53,
	0x42, 0x10, 0x05, 0x32, 0x9c, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x6b, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x6b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x69, 0x73, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x73, 0x61, 0x72, 0x64, 0x76, 0x64,
	0x69, 0x2e, 0x64, 0x69, 0x73, 0x6b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x44, 0x69, 0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e,
	0x69, 0x73, 0x61, 0x72, 0x64, 0x2e, 0x69, 0x73, 0x61, 0x72, 0x64, 0x76, 0x64, 0x69, 0x2e, 0x64,
	0x69, 0x73, 0x6b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x44, 0x69,
	0x73, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x69, 0x73, 0x61, 0x72, 0x64, 0x2f, 0x69, 0x73, 0x61, 0x72, 0x64, 0x76, 0x64, 0x69, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x69, 0x73, 0x6b, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_diskoperations_diskoperations_proto_rawDescOnce sync.Once
	file_proto_diskoperations_diskoperations_proto_rawDescData = file_proto_diskoperations_diskoperations_proto_rawDesc
)

func file_proto_diskoperations_diskoperations_proto_rawDescGZIP() []byte {
	file_proto_diskoperations_diskoperations_proto_rawDescOnce.Do(func() {
		file_proto_diskoperations_diskoperations_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_diskoperations_diskoperations_proto_rawDescData)
	})
	return file_proto_diskoperations_diskoperations_proto_rawDescData
}

var file_proto_diskoperations_diskoperations_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_diskoperations_diskoperations_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_diskoperations_diskoperations_proto_goTypes = []interface{}{
	(DiskType)(0),              // 0: com.gitlab.isard.isardvdi.diskoperations.DiskType
	(*DiskCreateRequest)(nil),  // 1: com.gitlab.isard.isardvdi.diskoperations.DiskCreateRequest
	(*DiskCreateResponse)(nil), // 2: com.gitlab.isard.isardvdi.diskoperations.DiskCreateResponse
}
var file_proto_diskoperations_diskoperations_proto_depIdxs = []int32{
	0, // 0: com.gitlab.isard.isardvdi.diskoperations.DiskCreateRequest.type:type_name -> com.gitlab.isard.isardvdi.diskoperations.DiskType
	1, // 1: com.gitlab.isard.isardvdi.diskoperations.DiskOperations.DiskCreate:input_type -> com.gitlab.isard.isardvdi.diskoperations.DiskCreateRequest
	2, // 2: com.gitlab.isard.isardvdi.diskoperations.DiskOperations.DiskCreate:output_type -> com.gitlab.isard.isardvdi.diskoperations.DiskCreateResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_diskoperations_diskoperations_proto_init() }
func file_proto_diskoperations_diskoperations_proto_init() {
	if File_proto_diskoperations_diskoperations_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_diskoperations_diskoperations_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_diskoperations_diskoperations_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiskCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_diskoperations_diskoperations_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_diskoperations_diskoperations_proto_goTypes,
		DependencyIndexes: file_proto_diskoperations_diskoperations_proto_depIdxs,
		EnumInfos:         file_proto_diskoperations_diskoperations_proto_enumTypes,
		MessageInfos:      file_proto_diskoperations_diskoperations_proto_msgTypes,
	}.Build()
	File_proto_diskoperations_diskoperations_proto = out.File
	file_proto_diskoperations_diskoperations_proto_rawDesc = nil
	file_proto_diskoperations_diskoperations_proto_goTypes = nil
	file_proto_diskoperations_diskoperations_proto_depIdxs = nil
}
